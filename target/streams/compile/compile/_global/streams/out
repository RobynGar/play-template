[0m[[0m[33mwarn[0m] [0m[0m/Users/robyn.garlington/Documents/scalaTraining/assignments/play-template/app/repositories/DataRepository.scala:50:31: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method headOption,[0m
[0m[[0m[33mwarn[0m] [0m[0mor remove the empty argument list from its definition (Java-defined methods are exempt).[0m
[0m[[0m[33mwarn[0m] [0m[0mIn Scala 3, an unapplied method like this will be eta-expanded into a function.[0m
[0m[[0m[33mwarn[0m] [0m[0m    collection.find(byID(id)).headOption flatMap {[0m
[0m[[0m[33mwarn[0m] [0m[0m                              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/robyn.garlington/Documents/scalaTraining/assignments/play-template/app/repositories/DataRepository.scala:58:35: Auto-application to `()` is deprecated. Supply the empty argument list `()` explicitly to invoke method headOption,[0m
[0m[[0m[33mwarn[0m] [0m[0mor remove the empty argument list from its definition (Java-defined methods are exempt).[0m
[0m[[0m[33mwarn[0m] [0m[0mIn Scala 3, an unapplied method like this will be eta-expanded into a function.[0m
[0m[[0m[33mwarn[0m] [0m[0m    collection.find(byName(name)).headOption flatMap {[0m
[0m[[0m[33mwarn[0m] [0m[0m                                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/robyn.garlington/Documents/scalaTraining/assignments/play-template/app/repositories/DataRepository.scala:31:52: comparing values of types Boolean and Boolean using `equals` unsafely bypasses cooperative equality; use `==` instead[0m
[0m[[0m[33mwarn[0m] [0m[0m         case value if value.wasAcknowledged.equals(true) => Right(book)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/robyn.garlington/Documents/scalaTraining/assignments/play-template/app/repositories/DataRepository.scala:71:51: comparing values of types Boolean and Boolean using `equals` unsafely bypasses cooperative equality; use `==` instead[0m
[0m[[0m[33mwarn[0m] [0m[0m      case value if(value.wasAcknowledged().equals(true)) => Right(book)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0mfour warnings found[0m
